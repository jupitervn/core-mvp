// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.0.0-beta5'
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }

}

task clean(type: Delete) {
    delete rootProject.buildDir
}

apply from: 'dependencies.gradle'
apply from: 'quality/quality.gradle'
apply plugin: 'build-dashboard'

//(D.Vu): Enable AndroidStudio process dagger modules inside test source code.
subprojects { Project project ->
    project.plugins.withType(JavaPlugin) {
        def javaConvention = project.convention.plugins.get("java") as JavaPluginConvention
        def javaCompileTaskName = null;
        javaConvention.sourceSets.getByName(SourceSet.MAIN_SOURCE_SET_NAME) { SourceSet sourceSet ->
            javaCompileTaskName = sourceSet.compileJavaTaskName;
        }
        javaConvention.sourceSets.getByName(SourceSet.TEST_SOURCE_SET_NAME) { SourceSet sourceSet ->
            def testCompileTask = tasks.getByName(sourceSet.compileJavaTaskName)
            def javaCompileTask = tasks.getByName(javaCompileTaskName)
            javaCompileTask.finalizedBy(testCompileTask)
        }
    }
    project.afterEvaluate {
        project.tasks.withType(Test) { task ->
            println "task " + task.name
            testLogging {
                events "started", "passed", "skipped", "failed"
            }
            testReport.reportOn task
        }
    }
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects

}
